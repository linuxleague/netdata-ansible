---
# Assorted internal checks used to notify the Agent SRE team aobut various issues.
name: Automation
on:
  schedule:
    - cron: '0 6 * * *'
env:
  THRESHOLD: 115200 # 32 hours, used as the threshold for a fresh nightly build (one day, plus the six scheduling offset on this workflow, plus a two hour buffer).
  WGET_OPTS: "-Sv -t 6 -T 60 -w 300 -N --no-dns-cache --retry-connrefused"
jobs:
  check-nightly-commits: # Verify if it looks like a nightly build ran or not, and whether it should have or not.
    name: Should Nightlies Have Run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          repository: netdata/netdata
          fetch-depth: 0
          path: netdata
      - name: Check Commits
        id: check-commits
        run: |
          cd netdata
          NOW="$(date +%s)"
          LAST_COMMIT="$(git rev-parse HEAD)"
          LAST_VERSION_COMMIT="$(git rev-list -1 HEAD packaging/version)"
          LAST_VERSION_COMMIT_TIME="$(git log -1 --format=%ct "${LAST_VERSION_COMMIT}")"

          if [ "${LAST_COMMIT}" = "${LAST_VERSION_COMMIT}" ]; then
            if grep -qE '.*-nightly' packaging/version; then
              # Last commit was from a nightly build.
              exit 0
            else
              # Last commit was from a release, a nightly should have run but did not.
              exit 1
            fi
          elif [ "${LAST_VERSION_COMMIT_TIME}" -lt "$((NOW - THRESHOLD))" ]; then
            # The last nightly build happened more than 32 hours ago.
            # Given that the last commit was not a nightly build commit, this means that the build should have run but did not.
            exit 1
          else
            # Last commit was not from a nightly build, but a nightly happened within the past 32 hours, so check the uploads from that.
            exit 0
          fi
      - name: Notify about failed nightly build
        if: ${{ steps.check-commits.outcome }} != 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'danger'
          SLACK_FOOTER: ''
          SLACK_ICON_EMOJI: ':github-actions:'
          SLACK_TITLE: '@agent-sre A nightly build should have run in the past day, but has not.'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_MESSAGE: >-
            Based on the state of the netdata/netdata repository, a nightly build should have run at some point within the past 32 hours, but it does not appear that a nightly build has run within that time.
            See https://github.com/netdata/netdata/actions/workflows/release.yml for information about the latest release workflow runs. Nightly builds should show ‘scheduled’ for the trigger.
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

  check-kickstart:
    name: Verify that kickstart script is deployed correctly
    runs-on: ubuntu-latest
    steps:
      - name: Fetch master kickstart script
        id: github
        run: |
          wget ${WGET_OPTS} -O kickstart-master.sh https://raw.githubusercontent.com/netdata/netdata/master/packaging/installer/kickstart.sh || exit 1
      - name: Notify about failure to retrieve script
        if: ${{ steps.github.outcome }} != 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'danger'
          SLACK_FOOTER: ''
          SLACK_ICON_EMOJI: ':github-actions:'
          SLACK_TITLE: '@agent-sre Failed to retrieve upstream kickstart script for verification.'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_MESSAGE: >-
            While attempting to verify deployment of the kickstart script, the master copy at https://github.com/netdata/netdata/blob/master/packaging/installer/kickstart.sh could not be retrieved.
            Most likely, this is a transient netowrk error.
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Fetch deployed kickstart script
        id: deployed
        run: |
          wget ${WGET_OPTS} -O kickstart-deployed.sh https://my-netdata.io/kickstart.sh || exit 1
      - name: Notify about failure to retrieve script
        if: ${{ steps.deployed.outcome }} != 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'danger'
          SLACK_FOOTER: ''
          SLACK_ICON_EMOJI: ':github-actions:'
          SLACK_TITLE: '@agent-sre Failed to retrieve deployed kickstart script for verification.'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_MESSAGE: >-
            While attempting to verify deployment of the kickstart script, the copy deployed at https://my-netdata.io/kickstart.sh could not be retrieved.
            Most likely, this is a transient netowrk error, but it could mean that the something is wrong with the London demo site.
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Compare retrieved scripts
        id: compare
        run: |
          diff -asU3 kickstart-master.sh kickstart-deployed.sh || exit 1
      - name: Notify about script mismatch
        if: ${{ steps.compare.outcome }} != 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'danger'
          SLACK_FOOTER: ''
          SLACK_ICON_EMOJI: ':github-actions:'
          SLACK_TITLE: '@agent-sre Kickstart script is not deployed correctly.'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_MESSAGE: >-
            The kickstart script deployed at https://my-netdata.io/kickstart.sh does not match the one located at https://github.com/netdata/netdata/blob/master/packaging/installer/kickstart.sh.
            Most likely, something is wrong with the automated upload cronjob.
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

  check-kickstart-checksum:
    name: Verify that the checksum for the kickstart script in netdata/learn matches the deployed copy of the script.
    runs-on: ubuntu-latest
    steps:
      - name: Fetch documentation
        id: docs
        run: |
          wget ${WGET_OPTS} -O kickstart.md https://raw.githubusercontent.com/netdata/learn/master/docs/agent/packaging/installer/methods/kickstart.md || exit 1
      - name: Notify about failure to retrieve documentation
        if: ${{ steps.docs.outcome }} != 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'danger'
          SLACK_FOOTER: ''
          SLACK_ICON_EMOJI: ':github-actions:'
          SLACK_TITLE: '@agent-sre Failed to retrieve documentation file for kickstart checksum verification.'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_MESSAGE: >-
            While attempting to verify the checksum of the deployed kickstart script, https://raw.githubusercontent.com/netdata/learn/master/docs/agent/packaging/installer/methods/kickstart.md could not be retrieved.
            Most likely, this is a transient netowrk error.
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Fetch deployed kickstart script
        id: deployed
        run: |
          wget ${WGET_OPTS} -O kickstart.sh https://my-netdata.io/kickstart.sh || exit 1
      - name: Notify about failure to retrieve script
        if: ${{ steps.deployed.outcome }} != 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'warning'
          SLACK_FOOTER: ''
          SLACK_ICON_EMOJI: ':github-actions:'
          SLACK_TITLE: '@agent-sre Failed to retrieve deployed kickstart script for checksum verification.'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_MESSAGE: >-
            While attempting to verify the checksum of the deployed kickstart script, https://my-netdata.io/kickstart.sh could not be retrieved.
            Most likely, this is a transient netowrk error, but it could mean that the something is wrong with the London demo site.
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Verify checksum
        id: verify
        run: |
          kickstart_checksum="$(md5sum ./kickstart.sh | cut -f 1 -d ' ')"
          docs_checksum="$(grep -E '".*" = ".*kickstart\.sh.*md5sum.*"' kickstart.md | cut -d '=' -f 1 | cut -d '"' -f 2)"

          case "$(echo "${docs_checksum}" | wc -l)" in
            0)
              echo "ERROR: Could not find a matching checksum line in https://github.com/netdata/learn/blob/master/docs/agent/packaging/installer/methods/kickstart.md."
              exit 1
            1)
              if [ "${kickstart_checksum}" != "${docs_checksum}" ]; then
                echo "ERROR: The checksum of the deployed kickstart script does not match what is in the documentation."
                exit 1
              fi
            *)
              echo "ERROR: Found more than one matching checksum line in https://github.com/netdata/learn/blob/master/docs/agent/packaging/installer/methods/kickstart.md."
              exit 1
          esac
      - name: Notify about script mismatch
        if: ${{ steps.compare.outcome }} != 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: 'danger'
          SLACK_FOOTER: ''
          SLACK_ICON_EMOJI: ':github-actions:'
          SLACK_TITLE: '@agent-sre The checksum of the deployed kickstart script does not match the documentation.'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_MESSAGE: >-
            The checksum of the kickstart script deployed at https://my-netdata.io/kickstart.sh does not match the checksum listed in https://github.com/netdata/learn/blob/master/docs/agent/packaging/installer/methods/kickstart.md.
            This probably means that there is a pending pull request to merge the updated documentation into the netdata/learn repository.
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
